# -*- mode: snippet -*-
# name: defdoc
# key: defdoc
# --
def ${1:name}($2):
    """
    $3
    ${2:$(let* ((indent
            (concat "\n" (make-string (current-column) 32)))
           (args
            (mapconcat
             '(lambda (x)
                (if (not (string= (nth 0 x) ""))
                    (concat (nth 0 x) " : (type)" indent (make-string python-indent 32) "description")))
             (mapcar
              '(lambda (x)
                 (mapcar
                  '(lambda (x)
                     (replace-regexp-in-string "[[:blank:]]*$" ""
                      (replace-regexp-in-string "^[[:blank:]]*" "" x)))
                  x))
              (mapcar '(lambda (x) (split-string x "="))
                      (split-string yas-text ",")))
             indent)))
      (if (string= args "")
          (concat indent "Returns" indent "-------" indent "(type)" indent (make-string 3 34))
        (mapconcat
         'identity
         (list "Parameters" "----------" args "" "Returns" "-------" "(type)" (make-string 3 34))
         indent)))}
    $0